/*
 * Project2.java
 * 09 September 2020
 * Jonathan Mainhart
 * GUI interface accepts make and model, purchase price, MPG, and weight of
 * Automobile objects and displays calculated sales tax. Radio buttons choose 
 * object class and disable input fields when not required.
 */
package mainhart;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JFrame;

/**
 *
 * @author jonmainhart
 */
public class Project2 extends javax.swing.JFrame {

    /**
     * Creates new form Project2
     */
    public Project2() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup2 = new javax.swing.ButtonGroup();
        makeModelLabel = new javax.swing.JLabel();
        salesTaxLabel = new javax.swing.JLabel();
        makeModel = new javax.swing.JTextField();
        salesPrice = new javax.swing.JTextField();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        isHybrid = new javax.swing.JRadioButton();
        isElectric = new javax.swing.JRadioButton();
        isOther = new javax.swing.JRadioButton();
        mpgLabel = new javax.swing.JLabel();
        weightLabel = new javax.swing.JLabel();
        mpg = new javax.swing.JTextField();
        weightPounds = new javax.swing.JTextField();
        computeSalesTaxButton = new javax.swing.JButton();
        clearFieldsButton = new javax.swing.JButton();
        displayReportButton = new javax.swing.JButton();
        computedSalesTaxLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Automobile Sales Tax Calculator");

        makeModelLabel.setLabelFor(makeModel);
        makeModelLabel.setText("Make and Model");

        salesTaxLabel.setText("Sales Price");

        jLayeredPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 255)), "Automobile Type", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        buttonGroup2.add(isHybrid);
        isHybrid.setText("Hybrid");
        isHybrid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isHybridActionPerformed(evt);
            }
        });

        buttonGroup2.add(isElectric);
        isElectric.setText("Electric");
        isElectric.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isElectricActionPerformed(evt);
            }
        });

        buttonGroup2.add(isOther);
        isOther.setSelected(true);
        isOther.setText("Other");
        isOther.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isOtherActionPerformed(evt);
            }
        });

        mpgLabel.setText("Miles per Gallon");

        weightLabel.setText("Weight in Pounds");

        mpg.setEnabled(false);

        weightPounds.setEnabled(false);

        jLayeredPane1.setLayer(isHybrid, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(isElectric, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(isOther, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(mpgLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(weightLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(mpg, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(weightPounds, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addComponent(isOther)
                        .addGap(177, 177, 177))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(isElectric)
                            .addComponent(isHybrid))
                        .addGap(46, 46, 46)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mpgLabel)
                            .addComponent(weightLabel))
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                                .addComponent(mpg, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(weightPounds)))
                        .addGap(39, 39, 39)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(isHybrid)
                    .addComponent(mpgLabel)
                    .addComponent(mpg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(weightLabel)
                    .addComponent(weightPounds, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(isElectric))
                .addGap(6, 6, 6)
                .addComponent(isOther)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        computeSalesTaxButton.setText("Compute Sales Tax");
        computeSalesTaxButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                computeSalesTaxButtonActionPerformed(evt);
            }
        });

        clearFieldsButton.setText("Clear Fields");
        clearFieldsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearFieldsButtonActionPerformed(evt);
            }
        });

        displayReportButton.setText("Display Report");
        displayReportButton.setToolTipText("Compute Sales Tax Before Running Report");
        displayReportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayReportButtonActionPerformed(evt);
            }
        });

        computedSalesTaxLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 255)));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(43, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(computeSalesTaxButton)
                    .addComponent(clearFieldsButton))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(computedSalesTaxLabel)
                    .addComponent(displayReportButton))
                .addGap(45, 45, 45))
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(salesTaxLabel)
                        .addGap(49, 49, 49)
                        .addComponent(salesPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(makeModelLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(makeModel, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {clearFieldsButton, computeSalesTaxButton, computedSalesTaxLabel, displayReportButton});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {makeModel, salesPrice});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(makeModelLabel)
                    .addComponent(makeModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(salesTaxLabel)
                    .addComponent(salesPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(computeSalesTaxButton)
                    .addComponent(computedSalesTaxLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(clearFieldsButton)
                    .addComponent(displayReportButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {clearFieldsButton, computeSalesTaxButton, computedSalesTaxLabel, displayReportButton});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    final int MAXARR = 5;
    ArrayList<Automobile> carList = new ArrayList<>();

    private void updateCarList() {
        // if arrayList is greater than max remove last element
        if (carList.size() > MAXARR) {
            carList.remove(carList.size() - 1);
        }
    } // end updateCarList()

    private void updateSalesTaxLabel() {
        computedSalesTaxLabel.setText(String.format("%.02f", carList.get(0).salesTax()));
    } // end updateSalesTaxLabel()

    private void displayReport() {
        // call the toString() method for each item in the list
        for (Automobile car : carList) {
            System.out.println();
            System.out.print(car.toString());
        }
    } // end displayReport()

    private void clearFieldsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearFieldsButtonActionPerformed

        /* button action will set all text fields to empty string, disable the
           fields not required, and set the button group to the  default selection*/
        isOther.setSelected(true);
        makeModel.setText("");
        mpg.setText("");
        salesPrice.setText("");
        weightPounds.setText("");
        computedSalesTaxLabel.setText("");
        mpg.setEnabled(false);
        weightPounds.setEnabled(false);

    }//GEN-LAST:event_clearFieldsButtonActionPerformed

    private void computeSalesTaxButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_computeSalesTaxButtonActionPerformed
        // Choose between car types and call appropriate class constructor
        try {
            if (isElectric.isSelected()) { // create opbject
                carList.add(0, new Electric(makeModel.getText(),
                        Integer.parseInt(salesPrice.getText()),
                        Integer.parseInt(weightPounds.getText())));
                updateCarList(); // add to the list
                updateSalesTaxLabel(); // display the tax in the window
            } else if (isHybrid.isSelected()) {
                carList.add(0, new Hybrid(makeModel.getText(),
                        Integer.parseInt(salesPrice.getText()),
                        Integer.parseInt(mpg.getText())));
                updateCarList();
                updateSalesTaxLabel();
            } else {
                carList.add(0, new Automobile(makeModel.getText(),
                        Integer.parseInt(salesPrice.getText())));
                updateCarList();
                updateSalesTaxLabel();
            }

        } catch (NumberFormatException nfe) {
            // error to the console
            System.out.println("Exception Thrown " + nfe.getMessage());
            // popup user message
            JFrame frame = new JFrame();
            JOptionPane.showMessageDialog(frame,
                    "You Must Enter Whole Numbers for Price, MPG, and Weight!");
        }
    }//GEN-LAST:event_computeSalesTaxButtonActionPerformed

    private void displayReportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayReportButtonActionPerformed
        displayReport();
    }//GEN-LAST:event_displayReportButtonActionPerformed

    private void isHybridActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isHybridActionPerformed
        // disable field not required
        weightPounds.setEnabled(false);
        // enable required field
        mpg.setEnabled(true);
    }//GEN-LAST:event_isHybridActionPerformed

    private void isElectricActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isElectricActionPerformed
        // disable field not required
        mpg.setEnabled(false);
        // enable required field
        weightPounds.setEnabled(true);
    }//GEN-LAST:event_isElectricActionPerformed

    private void isOtherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isOtherActionPerformed
        // diable fields not required
        mpg.setEnabled(false);
        weightPounds.setEnabled(false);
    }//GEN-LAST:event_isOtherActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Project2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Project2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Project2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Project2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Project2().setVisible(true);
            }
        });
    } // end main

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton clearFieldsButton;
    private javax.swing.JButton computeSalesTaxButton;
    private javax.swing.JLabel computedSalesTaxLabel;
    private javax.swing.JButton displayReportButton;
    private javax.swing.JRadioButton isElectric;
    private javax.swing.JRadioButton isHybrid;
    private javax.swing.JRadioButton isOther;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JTextField makeModel;
    private javax.swing.JLabel makeModelLabel;
    private javax.swing.JTextField mpg;
    private javax.swing.JLabel mpgLabel;
    private javax.swing.JTextField salesPrice;
    private javax.swing.JLabel salesTaxLabel;
    private javax.swing.JLabel weightLabel;
    private javax.swing.JTextField weightPounds;
    // End of variables declaration//GEN-END:variables
}
